---
# tasks file for dfor-station

# Prepare System
- name: Install CA Certificates (Debian-based systems)
  ansible.builtin.apt:
    name:
      - ca-certificates
    state: present
  when: ansible_os_family == "Debian"

- name: Install Required Packages
  ansible.builtin.apt:
    name:
      - git
    state: present

- name: Upgrade Debian
  ansible.builtin.apt:
    upgrade: dist
    update_cache: yes

- name: Check if a reboot is required.
  ansible.builtin.stat:
    path: /var/run/reboot-required
    get_checksum: no
  register: reboot_required_file

- name: Reboot the server (if required).
  ansible.builtin.reboot:
  when: reboot_required_file.stat.exists == true

- name: Download Fleet From GitHub
  ansible.builtin.git:
    repo: https://github.com/fleetdm/fleet.git
    dest: "{{ fleet_install_path }}"
    clone: yes

- name: Run Fleet Docker Image
  ansible.builtin.command:
    chdir: "{{ fleet_install_path }}"
    argv:
      - docker
      - compose
      - up
      - -d
# Set up Fleet Website Server on Debian
- name: Update apt package list
  ansible.builtin.apt:
    update_cache: yes

- name: Install Node.js and npm
  ansible.builtin.apt:
    name:
      - nodejs
      - npm
    state: present

# note: npm install command can take 15+ minutes to run
- name: Run the npm install command and install npm dependencies
  ansible.builtin.shell:
    cmd: npm install
    chdir: fleet-docker/website

# same case with npm start-dev command- took over 4 hours and still didn't run- the connection ended up getting reset 
# as my laptop turned off
# - name: Run the build-static-content script and start the website server with the npm start-dev command
- name: Run the build-static-content script
  ansible.builtin.shell:
    # cmd: npm run start-dev
    cmd: node ./node_modules/sails/bin/sails run build-static-content
    chdir: fleet-docker/website

- name: Start the website server
  ansible.builtin.shell:
    cmd: node ./node_modules/sails/bin/sails lift
    chdir: fleet-docker/website