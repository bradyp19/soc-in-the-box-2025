---
# tasks file for dfir-station

# Wireshark
- name: run apt-get update
  apt:
    update_cache: yes
  become: yes

- name: let non root to capture traffic
  debconf:
    name='wireshark-common'
    question='wireshark-common/install-setuid'
    vtype='boolean'
    value='true'
  become: yes

- name: install cli package
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ wireshark_cli_package }}"
  when: wireshark_cli
  become: yes

- name: install gui package
  apt:
    name: "{{ item }}"
    state: present
  with_items: "{{ wireshark_gui_package }}"
  when: wireshark_gui
  become: yes

- name: add current user to wireshark group
  user:
    name: "{{ wireshark_user }}"
    append: yes
    groups: wireshark
  become: yes

# Velociraptor Server
- name: Download velociraptor binary
  get_url:
    url: https://github.com/Velocidex/velociraptor/releases/download/v0.73/velociraptor-v0.73.1-linux-amd64
    dest: "{{ velociraptor_dir }}/velociraptor"
    mode: '0644'

- name: Make Velociraptor binary executable
  command: chmod +x "{{ velociraptor_dir }}/velociraptor"

- name: Ensure the Velociraptor directory exists
  file:
    path: "{{ velociraptor_dir }}"
    state: directory
    mode: '0644'

- name: Create an empty Velociraptor config file if not present
  file:
    path: "{{ velociraptor_dir}}/velociraptor_server_config.yml"
    state: touch # This creates an empty file if it doesn't exist

- name: Check if Velociraptor config file exists
  stat:
    path: "{{ velociraptor_dir }}/velociraptor_server_config.yml"
  register: config_file_stat

- name: Generate Velociraptor config file if not present
  shell: >
    ./velociraptor config generate --merge
    '{"autocert_domain": "domain.com", "autocert_cert_cache": "/foo/bar"}'
  args:
    chdir: "{{ velociraptor_dir }}"
  when: not config_file_stat.stat.exists  # Only run if the config file does not exist

- name: Check if Velociraptor server package exists
  stat:
    path: "{{ velociraptor_dir }}/velociraptor_server.deb"
  register: deb_file_stat

- name: Create Velociraptor server package (Debian) if not present
  shell: >
    ./velociraptor --config "{{ velociraptor_dir }}/velociraptor_server_config.yml" debian server --binary velociraptor-linux-amd64
  args:
    chdir: "{{ velociraptor_dir }}"
  when: not deb_file_stat.stat.exists  # Only run if the .deb file does not exist

- name: Copy Velociraptor server package to remote server
  copy:
    src: "{{ velociraptor_dir }}/velociraptor_server.deb"
    dest: /tmp/velociraptor_server.deb
  delegate_to: 10.12.99.1  # Remote server IP

- name: Install Velociraptor package on remote server
  become: yes
  apt:
    deb: /tmp/velociraptor_server.deb
  delegate_to: 10.12.99.1  # Remote server IP

- name: Clean up the .deb file from the remote server
  file:
    path: /tmp/velociraptor_server.deb
    state: absent
  delegate_to: 10.12.99.1  # Remote server IP